buildscript {
    ext {
        springBootVersion = '2.0.6.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url 'https://artifactory.does.not.exist/artifactory/gradle-release'
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'com.github.sherter.google-java-format' version '0.6'
    id "org.sonarqube" version "2.6.2"
    id "com.gorylenko.gradle-git-properties" version "1.5.1"
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven'

configurations.all {
    resolutionStrategy {
        // don't cache changing modules at all
        cacheChangingModulesFor 0, 'seconds'
    }
    exclude group: 'commons-logging', module: 'commons-logging'
}

repositories {
    mavenCentral()
    maven {
        url 'https://artifactory.does.not.exist/artifactory/gradle-release'
    }
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'src/generated/java'
        }
    }
    test {
        java {
            srcDir 'src/test/java'
        }
    }
}

dependencies {
    ext.commonVersion = '0.7.9-SNAPSHOT'

    compile( group: 'uk.gov.dft.bluebadge', name: 'bluebadge-common', version: "${commonVersion}", changing: true ){
        exclude group: 'org.mybatis.spring.boot', module: 'mybatis-spring-boot-starter'
    }
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.8'
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-csv', version: '2.9.8'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.0.1.RELEASE'
    compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2")
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.1.2.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-sleuth', version: '2.0.1.RELEASE'
    compile group: 'io.micrometer', name: 'micrometer-core', version: '1.1.4'
    compile group: 'io.micrometer', name: 'micrometer-registry-prometheus', version: '1.1.4'

    compile('org.postgresql:postgresql:42.2.2')
    compile('org.apache.commons:commons-lang3:3.7')
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.8.0'
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.8.0'
    compileOnly('org.projectlombok:lombok:1.16.22')
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.5'

    compile group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.11.385'

    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.0.1.RELEASE'
    testCompileOnly ('org.projectlombok:lombok:1.16.22')

    runtime('org.springframework.boot:spring-boot-devtools')
    runtime group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '5.2'
    runtime group: 'ch.qos.logback.contrib', name: 'logback-json-classic', version: '0.1.5'
    runtime group: 'ch.qos.logback.contrib', name: 'logback-jackson', version: '0.1.5'
    runtime group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.3'
}

bootRun {
    sourceResources sourceSets.main
}
def props = new Properties()
file("src/main/resources/application.properties").withInputStream { props.load(it) }
springBoot {
    buildInfo{
        properties {
            additional = [
                    'api.version': props.getProperty('api.version')
            ]
        }
    }
}

archivesBaseName = "badgemanagement-service"
compileJava.dependsOn 'googleJavaFormat'

publishing {
    publications {
        project_service(MavenPublication) {
            artifact("${buildDir}/database-schema/" + getTheVersion() + "_schema.zip") {
                classifier "schema"
            }
            from components.java
            artifactId "${archivesBaseName}"
        }
    }
}
